---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: cilium
  namespace: cilium
spec:
  interval: 5m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: cilium
      version: "1.15.x"
      sourceRef:
        kind: HelmRepository
        name: cilium
        namespace: cilium
      interval: 1m
  valuesFrom:
    - kind: ConfigMap
      name: cilium-values
    # We actually upgrade the Cilium installation in-place, by enabling mTLS for Hubble after the bootstrap
    # is complete. This allows us to install cert-manager before this step.
    - kind: ConfigMap
      name: cilium-values-tls
  postRenderers:
    - kustomize:
        patches:
          # Hassle: Patch Hubble UI so it can be exposed via the Gateway API
          - target:
              kind: ConfigMap
              name: hubble-ui-nginx
            patch: |
              - op: replace
                path: /data/nginx.conf
                value: |
                  server {
                      listen       8081;
                      listen       [::]:8081;
                      server_name  localhost;
                      root /app;
                      index index.html;
                      client_max_body_size 1G;

                      location / {
                          proxy_set_header Host $host;
                          proxy_set_header X-Real-IP $remote_addr;

                          # CORS
                          add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
                          add_header Access-Control-Allow-Origin *;
                          add_header Access-Control-Max-Age 1728000;
                          add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
                          add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
                          if ($request_method = OPTIONS) {
                              return 204;
                          }
                          # /CORS

                          location /api/ui.UI {
                              grpc_hide_header Access-Control-Allow-Origin;
                              grpc_pass grpc://127.0.0.1:8090;
                          }

                          location /api {
                              proxy_http_version 1.1;
                              proxy_pass_request_headers on;
                              proxy_hide_header Access-Control-Allow-Origin;
                              proxy_pass http://127.0.0.1:8090;
                          }

                          location / {
                              # double `/index.html` is required here
                              try_files $uri $uri/ /index.html /index.html;
                          }

                          # Liveness probe
                          location /healthz {
                              access_log off;
                              add_header Content-Type text/plain;
                              return 200 'ok';
                          }
                      }
                  }
